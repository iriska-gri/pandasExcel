pyuic6 design.ui -o design.py


filtered_data = merged_df[merged_df["user_id"]==224] // Найти строки
a = merged_df.loc[merged_df["user_id"]==224, ['count']] //вывести столбцы с фильтром по строке 
merged_df.loc[merged_df["user_id"].isin([224, 484695]), ['user_id', 'count']] // Несколько условий для фильтра

Ещё несколько вариантов чтения данных из Google Sheets:

get_all_values(). Возвращает значения всех ячеек листа в виде списка списков. 13
get(). Возвращает все значения из диапазона ячеек. 1
batch_get(). Позволяет получить значения из нескольких диапазонов ячеек за один вызов API. 1
row_values(). Получает все значения из первой строки. 2
col_values(). Получает все значения из первого столбца. 2
Также с помощью get_all_records() можно получить данные из листа в DataFrame библиотеки pandas. 14

df.head(n=2) // первые две записи
df.tail(n=2) /последние две записи

axis=0 - строка
axis=1 - столбец

// вставить столбец
reports.insert(loc = 1,  # это будет второй по счёту столбец
column = 'code',
value = 'sad')  # название столбца

reports[['code', 'Подтип мониторинга']] // вывод по названию столбцов

print(df.columns) // название колонок



 SELECT users.id,
    (users.first_name::text || ' '::text) || users.last_name::text AS fio,
    geo_objects.geo_object_id,
    geo_objects.title,
    geo_objects.city,
    count(reports.report_state) FILTER (WHERE reports.report_state::text = 'accepted'::text) AS accepted,
    count(reports.report_state) AS count
   FROM reports
     LEFT JOIN users ON users.id = reports.user_id
     LEFT JOIN geo_objects ON geo_objects.geo_object_id = reports.geo_object_id
  GROUP BY ((users.first_name::text || ' '::text) || users.last_name::text), users.id, geo_objects.geo_object_id, geo_objects.title, geo_objects.city
  ORDER BY users.id;